import 'bloc/create_new_password_bloc.dart';import 'models/create_new_password_model.dart';import 'package:flutter/material.dart';import 'package:your_social_now/core/app_export.dart';import 'package:your_social_now/widgets/app_bar/appbar_image.dart';import 'package:your_social_now/widgets/app_bar/appbar_title.dart';import 'package:your_social_now/widgets/app_bar/custom_app_bar.dart';import 'package:your_social_now/widgets/custom_button.dart';import 'package:your_social_now/widgets/custom_text_form_field.dart';import 'package:your_social_now/presentation/reset_password_successful_dialog/reset_password_successful_dialog.dart';class CreateNewPasswordScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<CreateNewPasswordBloc>(create: (context) => CreateNewPasswordBloc(CreateNewPasswordState(createNewPasswordModelObj: CreateNewPasswordModel()))..add(CreateNewPasswordInitialEvent()), child: CreateNewPasswordScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(48), leadingWidth: 52, leading: AppbarImage(height: getSize(28), width: getSize(28), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 24, top: 10, bottom: 10), onTap: () {onTapArrowleft9(context);}), title: AppbarTitle(text: "msg_create_new_pass".tr, margin: getMargin(left: 16))), body: Container(width: double.maxFinite, padding: getPadding(left: 24, top: 117, right: 24), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("msg_create_your_new".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanMedium18.copyWith(letterSpacing: getHorizontalSize(0.2))), BlocSelector<CreateNewPasswordBloc, CreateNewPasswordState, TextEditingController?>(selector: (state) => state.statusFillTypePasswordController, builder: (context, statusFillTypePasswordController) {return CustomTextFormField(focusNode: FocusNode(), controller: statusFillTypePasswordController, hintText: "msg_enter_new_passw".tr, margin: getMargin(top: 25), textInputType: TextInputType.visiblePassword, prefix: Container(margin: getMargin(left: 20, top: 18, right: 12, bottom: 22), child: CustomImageView(svgPath: ImageConstant.imgLock)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(60)), suffix: Container(margin: getMargin(left: 12, top: 18, right: 20, bottom: 22), child: CustomImageView(svgPath: ImageConstant.imgDashboard20x20)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(60)));}), BlocSelector<CreateNewPasswordBloc, CreateNewPasswordState, TextEditingController?>(selector: (state) => state.statusFillTypePasswordOneController, builder: (context, statusFillTypePasswordOneController) {return CustomTextFormField(focusNode: FocusNode(), controller: statusFillTypePasswordOneController, hintText: "msg_confirm_new_pas".tr, margin: getMargin(top: 24), textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, prefix: Container(margin: getMargin(left: 20, top: 18, right: 12, bottom: 22), child: CustomImageView(svgPath: ImageConstant.imgLock)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(60)), suffix: Container(margin: getMargin(left: 30, top: 18, right: 20, bottom: 22), child: CustomImageView(svgPath: ImageConstant.imgDashboard20x20)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(60)));}), CustomButton(height: getVerticalSize(58), text: "lbl_continue".tr, margin: getMargin(top: 24, bottom: 5), variant: ButtonVariant.OutlineDeeporangeA40035, shape: ButtonShape.RoundedBorder16, padding: ButtonPadding.PaddingAll18, fontStyle: ButtonFontStyle.UrbanistRomanBold16WhiteA700, onTap: () {onTapContinue(context);})])))); } 
onTapContinue(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: ResetPasswordSuccessfulDialog.builder(context),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: EdgeInsets.only(left: 0),)); } 
onTapArrowleft9(BuildContext context) { NavigatorService.goBack(); } 
 }
