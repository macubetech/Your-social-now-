import '../messages_screen/widgets/listellipse7_item_widget.dart';import '../messages_screen/widgets/listmessage_item_widget.dart';import 'bloc/messages_bloc.dart';import 'models/listellipse7_item_model.dart';import 'models/listmessage_item_model.dart';import 'models/messages_model.dart';import 'package:flutter/material.dart';import 'package:your_social_now/core/app_export.dart';import 'package:your_social_now/widgets/app_bar/appbar_image.dart';import 'package:your_social_now/widgets/app_bar/appbar_title.dart';import 'package:your_social_now/widgets/app_bar/custom_app_bar.dart';import 'package:your_social_now/widgets/custom_search_view.dart';class MessagesScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<MessagesBloc>(create: (context) => MessagesBloc(MessagesState(messagesModelObj: MessagesModel()))..add(MessagesInitialEvent()), child: MessagesScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(52), leadingWidth: 52, leading: AppbarImage(height: getSize(28), width: getSize(28), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 24, top: 10, bottom: 14), onTap: () {onTapArrowleft17(context);}), title: AppbarTitle(text: "lbl_messages".tr, margin: getMargin(left: 16)), actions: [AppbarImage(height: getSize(28), width: getSize(28), svgPath: ImageConstant.imgPlus28x28, margin: getMargin(left: 24, top: 10, right: 14)), AppbarImage(height: getSize(28), width: getSize(28), svgPath: ImageConstant.imgClock24x24, margin: getMargin(left: 20, top: 10, right: 38))]), body: Container(width: double.maxFinite, padding: getPadding(top: 19, bottom: 19), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [Align(alignment: Alignment.center, child: BlocSelector<MessagesBloc, MessagesState, TextEditingController?>(selector: (state) => state.stateDefaultSearchController, builder: (context, stateDefaultSearchController) {return CustomSearchView(focusNode: FocusNode(), controller: stateDefaultSearchController, hintText: "lbl_search".tr, margin: getMargin(left: 24, right: 24), alignment: Alignment.center, prefix: Container(margin: getMargin(left: 20, top: 18, right: 12, bottom: 18), child: CustomImageView(svgPath: ImageConstant.imgSearchGray400)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(56)), suffix: Container(margin: getMargin(left: 30, top: 18, right: 20, bottom: 18), child: CustomImageView(svgPath: ImageConstant.imgOverflowmenu)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(56)));})), Padding(padding: getPadding(left: 24, top: 26), child: Text("lbl_recently".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold20)), Align(alignment: Alignment.centerRight, child: Container(height: getVerticalSize(126), child: BlocSelector<MessagesBloc, MessagesState, MessagesModel?>(selector: (state) => state.messagesModelObj, builder: (context, messagesModelObj) {return ListView.separated(padding: getPadding(left: 24, top: 22), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(16));}, itemCount: messagesModelObj?.listellipse7ItemList.length ?? 0, itemBuilder: (context, index) {Listellipse7ItemModel model = messagesModelObj?.listellipse7ItemList[index] ?? Listellipse7ItemModel(); return Listellipse7ItemWidget(model);});}))), Padding(padding: getPadding(left: 24, top: 26), child: Text("lbl_messages".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtUrbanistRomanBold20)), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 24, top: 21, right: 24), child: BlocSelector<MessagesBloc, MessagesState, MessagesModel?>(selector: (state) => state.messagesModelObj, builder: (context, messagesModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(24));}, itemCount: messagesModelObj?.listmessageItemList.length ?? 0, itemBuilder: (context, index) {ListmessageItemModel model = messagesModelObj?.listmessageItemList[index] ?? ListmessageItemModel(); return ListmessageItemWidget(model, onTapRowellipse: () {onTapRowellipse(context);});});})))])))); } 
onTapRowellipse(BuildContext context) { NavigatorService.pushNamed(AppRoutes.messagesBoxScreen); } 
onTapArrowleft17(BuildContext context) { NavigatorService.goBack(); } 
 }
